---
# tasks file for odoo_role

- name: Check if target directory exists
  stat:
    path: "{{ target_dir }}"
  register: dir_check

- name: Set working directory
  set_fact:
    working_dir: "{{ target_dir if dir_check.stat.exists else fallback_dir }}"

- name: Display working directory
  debug:
    msg: "Le répertoire de travail est : {{ working_dir }}"

- name: Check if FUSE module is available
  command: find /lib/modules/$(uname -r) -name 'fuse.ko*'
  register: fuse_module_check
  changed_when: false
  ignore_errors: yes

- name: Install FUSE kernel module (Debian/Ubuntu)
  become: yes
  apt:
    name: 
      - linux-modules-extra-{{ ansible_kernel }}
    state: present
  when: fuse_module_check.stdout == "" and ansible_os_family in ["Debian", "Ubuntu"]

- name: Install FUSE kernel module (RedHat/CentOS)
  become: yes
  yum:
    name: 
      - fuse
      - fuse-libs
    state: present
  when: fuse_module_check.stdout == "" and ansible_os_family in ["RedHat", "CentOS"]

- name: Load FUSE module
  become: yes
  command: modprobe fuse
  ignore_errors: yes

- name: Check if fuse-overlayfs is installed
  command: which fuse-overlayfs
  register: fuse_overlayfs_check
  ignore_errors: yes
  changed_when: false

- name: Install fuse-overlayfs (Debian/Ubuntu)
  become: yes
  apt:
    name: fuse-overlayfs
    state: present
  when: fuse_overlayfs_check.rc != 0 and ansible_os_family in ["Debian", "Ubuntu"]

- name: Install fuse-overlayfs (RedHat/CentOS)
  become: yes
  yum:
    name: fuse-overlayfs
    state: present
  when: fuse_overlayfs_check.rc != 0 and ansible_os_family in ["RedHat", "CentOS"]

- name: Check Docker version
  command: docker --version
  register: docker_version
  changed_when: false

- name: Extract Docker version number
  set_fact:
    docker_version_number: "{{ docker_version.stdout | regex_search('([0-9]+\\.[0-9]+\\.[0-9]+)') | first }}"

- name: Configure Docker to use overlay2 storage driver
  become: yes
  copy:
    content: |
      {
        "storage-driver": "overlay2"
      }
    dest: /etc/docker/daemon.json
  notify: Restart Docker service

- name: Disable SELinux temporarily
  become: yes
  command: setenforce 0
  when: ansible_selinux.status is defined and ansible_selinux.status == 'enabled'
  ignore_errors: yes

- name: Check working directory permissions
  file:
    path: "{{ working_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  become: yes

- name: Verify Docker is running
  command: docker info
  register: docker_info
  changed_when: false
  failed_when: docker_info.rc != 0

- name: Generate and start Docker Compose
  block:
    - name: "Generate docker compose file"
      template:
        src: "docker-compose-odoo.yml.j2"
        dest: "{{ working_dir }}/docker-compose-odoo.yml"
        mode: '0644'

    - name: "Start docker compose"
      command: "docker compose -f {{ working_dir }}/docker-compose-odoo.yml up -d"
  
  vars:
    ansible_become: yes
  when: docker_info.rc == 0 and working_dir is defined

- name: Warn if fallback directory was used
  debug:
    msg: "Attention : Le répertoire de repli ({{ fallback_dir }}) a été utilisé car {{ target_dir }} n'existe pas."
  when: working_dir == fallback_dir